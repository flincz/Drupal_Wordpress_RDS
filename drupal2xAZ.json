{
  "AWSTemplateFormatVersion" : "2010-09-09",

  "Description" : "AWS CloudFormation Sample Template Drupal_Multi_AZ. Drupal is an open source content management platform powering millions of websites and applications. This template installs a highly-available, scalable Drupal deployment using a multi-az Amazon RDS database instance for storage. It uses the AWS CloudFormation bootstrap scripts to install packages and files at instance launch time. **WARNING** This template creates one or more Amazon EC2 instances, an Elastic Load Balancer and an Amazon RDS database. You will be billed for the AWS resources used if you create a stack from this template.",

  "Parameters" : {

    "DrupalKeyName": {
      "Description" : "Name of an existing EC2 KeyPair to enable SSH access to the instances",
      "Type": "String"
    },
    "DrupalWebServerCapacity": {
      "Description" : "The initial number of WebServer instances",
      "Type": "Number"
    },
    "DrupalSiteName": {
      "Description" : "The name of the Drupal Site",
      "Type": "String"
    },
    "DrupalSiteEMail": {
      "Description" : "EMail for site administrator",
      "Type": "String"
    },
    "DrupalSiteAdmin": {
      "Description" : "The Drupal site admin account username",
      "Type": "String"
    },
    "DrupalSitePassword": {
      "Description" : "The Drupal site admin account password",
      "Type": "String"
    },
    "DrupalDBName": {
      "Description" : "The Drupal database name",
      "Type": "String"
    },
    "DrupalDBUsername": {
      "Description" : "The Drupal database admin account username",
      "Type": "String"
    },
    "DrupalDBPassword": {
      "Description" : "The Drupal database admin account password",
      "Type": "String"
    },
    "DrupalDBRootPassword": {
      "Description" : "The Drupal database root account password",
      "Type": "String"
    },
    "DrupalDBClass" : {
      "Description" : "Database instance class",
      "Type" : "String"
    },
    "DrupalDBAllocatedStorage" : {
      "Description" : "The size of the database (Gb)",
      "Type": "Number"
    },
    "DrupalMultiAZDatabase": {
      "Description" : "Create a multi-AZ MySQL Amazon RDS database instance",
      "Type": "String"
    },
    "DrupalSSHLocation" : {
      "Description" : "The IP address range that can be used to SSH to the EC2 instances",
      "Type": "String"
    },
    "DrupalInstanceType" : {
     "Description" : "WebServer EC2 instance type",
     "Type" : "String"
  },
"NetworkStackName": {
  "Description": "Name of an active CloudFormation stack that contains the networking resources, such as the subnet and security group, that will be used in this stack.",
  "Type": "String",
  "MinLength" : 1,
  "MaxLength" : 255,
  "AllowedPattern" : "^[a-zA-Z][-a-zA-Z0-9]*$",
   "Default" : "SampleNetworkCrossStack"
}
},

  "Mappings" : {
    "AWSInstanceType2Arch" : {
      "t1.micro"    : { "Arch" : "PV64"   },
      "t2.micro"    : { "Arch" : "HVM64"  },
      "t2.small"    : { "Arch" : "HVM64"  },
      "t2.medium"   : { "Arch" : "HVM64"  },
      "m1.small"    : { "Arch" : "PV64"   },
      "m1.medium"   : { "Arch" : "PV64"   },
      "m1.large"    : { "Arch" : "PV64"   },
      "m1.xlarge"   : { "Arch" : "PV64"   },
      "m2.xlarge"   : { "Arch" : "PV64"   },
      "m2.2xlarge"  : { "Arch" : "PV64"   },
      "m2.4xlarge"  : { "Arch" : "PV64"   },
      "m3.medium"   : { "Arch" : "HVM64"  },
      "m3.large"    : { "Arch" : "HVM64"  },
      "m3.xlarge"   : { "Arch" : "HVM64"  },
      "m3.2xlarge"  : { "Arch" : "HVM64"  },
      "c1.medium"   : { "Arch" : "PV64"   },
      "c1.xlarge"   : { "Arch" : "PV64"   },
      "c3.large"    : { "Arch" : "HVM64"  },
      "c3.xlarge"   : { "Arch" : "HVM64"  },
      "c3.2xlarge"  : { "Arch" : "HVM64"  },
      "c3.4xlarge"  : { "Arch" : "HVM64"  },
      "c3.8xlarge"  : { "Arch" : "HVM64"  },
      "c4.large"    : { "Arch" : "HVM64"  },
      "c4.xlarge"   : { "Arch" : "HVM64"  },
      "c4.2xlarge"  : { "Arch" : "HVM64"  },
      "c4.4xlarge"  : { "Arch" : "HVM64"  },
      "c4.8xlarge"  : { "Arch" : "HVM64"  },
      "g2.2xlarge"  : { "Arch" : "HVMG2"  },
      "r3.large"    : { "Arch" : "HVM64"  },
      "r3.xlarge"   : { "Arch" : "HVM64"  },
      "r3.2xlarge"  : { "Arch" : "HVM64"  },
      "r3.4xlarge"  : { "Arch" : "HVM64"  },
      "r3.8xlarge"  : { "Arch" : "HVM64"  },
      "i2.xlarge"   : { "Arch" : "HVM64"  },
      "i2.2xlarge"  : { "Arch" : "HVM64"  },
      "i2.4xlarge"  : { "Arch" : "HVM64"  },
      "i2.8xlarge"  : { "Arch" : "HVM64"  },
      "d2.xlarge"   : { "Arch" : "HVM64"  },
      "d2.2xlarge"  : { "Arch" : "HVM64"  },
      "d2.4xlarge"  : { "Arch" : "HVM64"  },
      "d2.8xlarge"  : { "Arch" : "HVM64"  },
      "hi1.4xlarge" : { "Arch" : "HVM64"  },
      "hs1.8xlarge" : { "Arch" : "HVM64"  },
      "cr1.8xlarge" : { "Arch" : "HVM64"  },
      "cc2.8xlarge" : { "Arch" : "HVM64"  }
    },

    "AWSRegionArch2AMI" : {
      "us-east-1"        : {"PV64" : "ami-0f4cfd64", "HVM64" : "ami-0d4cfd66", "HVMG2" : "ami-5b05ba30"},
      "us-west-2"        : {"PV64" : "ami-d3c5d1e3", "HVM64" : "ami-d5c5d1e5", "HVMG2" : "ami-a9d6c099"},
      "us-west-1"        : {"PV64" : "ami-85ea13c1", "HVM64" : "ami-87ea13c3", "HVMG2" : "ami-37827a73"},
      "eu-west-1"        : {"PV64" : "ami-d6d18ea1", "HVM64" : "ami-e4d18e93", "HVMG2" : "ami-72a9f105"},
      "eu-central-1"     : {"PV64" : "ami-a4b0b7b9", "HVM64" : "ami-a6b0b7bb", "HVMG2" : "ami-a6c9cfbb"},
      "ap-northeast-1"   : {"PV64" : "ami-1a1b9f1a", "HVM64" : "ami-1c1b9f1c", "HVMG2" : "ami-f644c4f6"},
      "ap-southeast-1"   : {"PV64" : "ami-d24b4280", "HVM64" : "ami-d44b4286", "HVMG2" : "ami-12b5bc40"},
      "ap-southeast-2"   : {"PV64" : "ami-ef7b39d5", "HVM64" : "ami-db7b39e1", "HVMG2" : "ami-b3337e89"},
      "sa-east-1"        : {"PV64" : "ami-5b098146", "HVM64" : "ami-55098148", "HVMG2" : "NOT_SUPPORTED"},
      "cn-north-1"       : {"PV64" : "ami-bec45887", "HVM64" : "ami-bcc45885", "HVMG2" : "NOT_SUPPORTED"}
    }
  },

  "Resources" : {

    "S3Bucket" : {
      "Type" : "AWS::S3::Bucket",
      "DeletionPolicy" : "Retain"
    },

    "BucketPolicy" : {
      "Type" : "AWS::S3::BucketPolicy",
      "Properties" : {
        "PolicyDocument": {
          "Version"      : "2008-10-17",
          "Id"           : "UploadPolicy",
          "Statement"    : [{
            "Sid"        : "EnableReadWrite",
            "Action"     : ["s3:GetObject", "s3:PutObject", "s3:PutObjectACL" ],
            "Effect"     : "Allow",
            "Resource"   : { "Fn::Join" : ["", ["arn:aws:s3:::", {"Ref" : "S3Bucket"} , "/*"]]},
            "Principal"  : { "AWS": {"Fn::GetAtt" : ["S3User", "Arn"]} }
          }]
        },
        "Bucket" : {"Ref" : "S3Bucket"}
      }
    },

    "S3User" : {
      "Type" : "AWS::IAM::User",
      "Properties" : {
        "Path": "/",
        "Policies": [{
          "PolicyName": "root",
          "PolicyDocument": { "Statement":[{
            "Effect":"Allow",
            "Action":"s3:*",
            "Resource":"*"
          }]}
        }]
      }
    },

    "S3Keys" : {
      "Type" : "AWS::IAM::AccessKey",
      "Properties" : {
        "UserName" : {"Ref": "S3User"}
      }
    },

    "ElasticLoadBalancer" : {
      "Type" : "AWS::ElasticLoadBalancing::LoadBalancer",
      "Metadata" : {
        "Comment" : "Configure the Load Balancer with a simple health check and cookie-based stickiness"
      },
      "Properties" : {
        "AvailabilityZones" : { "Fn::GetAZs" : "" },
        "LBCookieStickinessPolicy" : [ {
          "PolicyName" : "CookieBasedPolicy",
          "CookieExpirationPeriod" : "30"
        } ],
        "Listeners" : [ {
          "LoadBalancerPort" : "80",
          "InstancePort" : "80",
          "Protocol" : "HTTP",
          "PolicyNames" : [ "CookieBasedPolicy" ]
        } ],
        "HealthCheck" : {
          "Target" : "HTTP:80/",
          "HealthyThreshold" : "2",
          "UnhealthyThreshold" : "5",
          "Interval" : "10",
          "Timeout" : "5"
        }
      }
    },

    "WebServerGroup" : {
      "Type" : "AWS::AutoScaling::AutoScalingGroup",
      "Properties" : {
        "AvailabilityZones" : { "Fn::GetAZs" : "" },
        "LaunchConfigurationName" : { "Ref" : "WebServer" },
        "MinSize" : "1",
        "MaxSize" : "5",
        "DesiredCapacity" : { "Ref" : "DrupalWebServerCapacity" },
        "LoadBalancerNames" : [ { "Ref" : "ElasticLoadBalancer" } ]
      }
    },

    "WebServer": {
        "Type": "AWS::AutoScaling::LaunchConfiguration",
        "Metadata" : {
          "AWS::CloudFormation::Init" : {
            "config" : {
              "packages" : {
                "yum" : {
                  "httpd"        : [],
                  "php"          : [],
                  "php-mysql"    : [],
                  "php-gd"       : [],
                  "php-xml"      : [],
                  "php-mbstring" : [],
                  "mysql"        : [],
                  "mysql-server" : [],
                  "mysql-devel"  : [],
                  "mysql-libs"   : []

                }
              },

              "sources" : {
                "/var/www/html"  : "http://ftp.drupal.org/files/projects/drupal-7.8.tar.gz",
                "/home/ec2-user" : "http://ftp.drupal.org/files/projects/drush-7.x-4.5.tar.gz"
              },

              "files" : {
                "/tmp/setup.mysql" : {
                  "content" : { "Fn::Join" : ["", [
                    "CREATE DATABASE ", { "Ref" : "DrupalDBName" }, ";\n",
                    "CREATE USER '", { "Ref" : "DrupalDBUsername" }, "'@'localhost' IDENTIFIED BY '", { "Ref" : "DrupalDBPassword" }, "';\n",
                    "GRANT ALL ON ", { "Ref" : "DrupalDBName" }, ".* TO '", { "Ref" : "DrupalDBUsername" }, "'@'localhost';\n",
                    "FLUSH PRIVILEGES;\n"
                    ]]},
                  "mode"  : "000644",
                  "owner" : "root",
                  "group" : "root"
                }
              },

              "services" : {
                "sysvinit" : {
                  "httpd"    : { "enabled" : "true", "ensureRunning" : "true" },
                  "mysqld"   : { "enabled" : "true", "ensureRunning" : "true" },
                  "sendmail" : { "enabled" : "false", "ensureRunning" : "false" }
                }
              }
            }
          }
        },
        "Properties": {
          "ImageId" : { "Fn::FindInMap" : [ "AWSRegionArch2AMI", { "Ref" : "AWS::Region" },
                            { "Fn::FindInMap" : [ "AWSInstanceType2Arch", { "Ref" : "DrupalInstanceType" }, "Arch" ] } ] },
          "InstanceType"   : { "Ref" : "DrupalInstanceType" },
          "SecurityGroups" : [ {"Ref" : "WebServerSecurityGroup"} ],
          "KeyName"        : { "Ref" : "DrupalKeyName" },
          "UserData"       : { "Fn::Base64" : { "Fn::Join" : ["", [
            "#!/bin/bash -v\n",
            "yum update -y aws-cfn-bootstrap\n",

            "# Helper function\n",
            "function error_exit\n",
            "{\n",
            "  /opt/aws/bin/cfn-signal -e 0 -r \"$1\" '", { "Ref" : "WaitHandle" }, "'\n",
            "  exit 1\n",
            "}\n",

            "# Install Apache Web Server, MySQL, PHP and Drupal\n",
            "/opt/aws/bin/cfn-init -s ", { "Ref" : "AWS::StackId" }, " -r WebServer ",
  		  "    --region ", { "Ref" : "AWS::Region" }, " || error_exit 'Failed to run cfn-init'\n",

            "# Setup MySQL root password and create a user\n",
            "mysqladmin -u root password '", { "Ref" : "DrupalDBRootPassword" }, "' || error_exit 'Failed to initialize root password'\n",
            "mysql -u root --password='", { "Ref" : "DrupalDBRootPassword" }, "' < /tmp/setup.mysql || error_exit 'Failed to create database user'\n",

            "# Make changes to Apache Web Server configuration\n",
            "mv /var/www/html/drupal-7.8/* /var/www/html\n",
            "mv /var/www/html/drupal-7.8/.* /var/www/html\n",
            "rmdir /var/www/html/drupal-7.8\n",
            "sed -i 's/AllowOverride None/AllowOverride All/g'  /etc/httpd/conf/httpd.conf\n",
            "service httpd restart\n",

            "# Create the site in Drupal\n",
            "cd /var/www/html\n",
            "~ec2-user/drush/drush site-install standard --yes",
            "     --site-name='", { "Ref" : "DrupalSiteName" }, "' --site-mail=", { "Ref" : "DrupalSiteEMail" },
            "     --account-name=", { "Ref" : "DrupalSiteAdmin" }, " --account-pass=", { "Ref" : "DrupalSitePassword" },
            "     --db-url=mysql://", { "Ref" : "DrupalDBUsername" }, ":", { "Ref" : "DrupalDBPassword" }, [{"Fn::ImportValue" : {"Fn::Sub" : "${NetworkStackName}-dbEndpoint"}}],
            "     --db-prefix=drupal_\n",
            "chown apache:apache sites/default/files\n",

            "# All is well so signal success\n",
            "/opt/aws/bin/cfn-signal -e 0 -r \"Drupal setup complete\" '", { "Ref" : "WaitHandle" }, "'\n"

          ]]}}
        }
      },

    "WaitHandle" : {
      "Type" : "AWS::CloudFormation::WaitConditionHandle"
    },

    "WaitCondition" : {
      "Type" : "AWS::CloudFormation::WaitCondition",
      "DependsOn" : "WebServerGroup",
      "Properties" : {
        "Handle" : {"Ref" : "WaitHandle"},
        "Timeout" : "600"
      }
    },

    "WebServerSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "Enable HTTP access via port 80, locked down to requests from the load balancer only and SSH access",
        "SecurityGroupIngress" : [
          {"IpProtocol" : "tcp", "FromPort" : "80", "ToPort" : "80", "SourceSecurityGroupOwnerId" : {"Fn::GetAtt" : ["ElasticLoadBalancer", "SourceSecurityGroup.OwnerAlias"]},"SourceSecurityGroupName" : {"Fn::GetAtt" : ["ElasticLoadBalancer", "SourceSecurityGroup.GroupName"]}},
          {"IpProtocol" : "tcp", "FromPort" : "22", "ToPort" : "22", "CidrIp" : { "Ref" : "DrupalSSHLocation"}}
        ]
      }
    }


  },

  "Outputs" : {
    "WebsiteURL" : {
      "Value" : { "Fn::Join" : ["", ["http://", { "Fn::GetAtt" : [ "ElasticLoadBalancer", "DNSName" ]}]] },
      "Description" : "Drupal Website"
    }
    }

}
